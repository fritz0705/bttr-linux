BeTTeR Linux
============

Back To The Roots Linux. Name pinched from `Leonard Techel <https://github.com/barnslig>`_.

Installation
------------

The installation of BTTR Linux is complicated. You have to build a sane crosscompiler environment and then you have to build all base packages. This process is complicated due to misdesign in glibc and gcc, and therefore we're referring only to the `Linux from Scratch project <http://www.linuxfromscratch.org/>`_, which provides an manual describing the building of a crosscompiler toolchain. Otherwise give us some time to produce a live system.

Ports
-----

The base of BTTR Linux is this ports tree. A port was invented on BSD and describes how to build a package from source. BTTR Linux Ports are nearly the same as in BSD with the difference, that we're using GNU Make instead of pmake/BSD Make and also try to write expressive Makefiles.

Any port consists of a directory and a Makefile, which is directly located in that directory. This Makefile has to provide several targets, which may be phony:

+------------+------------------------------------------------------+
| fetch      | Fetch source code                                    |
+------------+------------------------------------------------------+
| unpack     | Unpack source code                                   |
+------------+------------------------------------------------------+
| patch      | Patch source code                                    |
+------------+------------------------------------------------------+
| configure  | Create configuration for building the port           |
+------------+------------------------------------------------------+
| build      | Build port                                           |
+------------+                                                      |
| all        |                                                      |
+------------+------------------------------------------------------+
| install    | Install port to DESTDIR                              |
+------------+------------------------------------------------------+
| clean      | Remove all built files and unpacked source code      |
+------------+------------------------------------------------------+
| distclean  | Same as clean, but also remove fetched source code   |
+------------+------------------------------------------------------+

These targets are used by our package building tools and port management tools, so have to implement them correctly.

Furthermore, there are also variables with special meaning:

+---------------+---------------------------------------------------+
| PREFIX        | Prefix for package files                          |
+---------------+---------------------------------------------------+
| DESTDIR       | Directory to install files                        |
+---------------+---------------------------------------------------+
| WITH_xxx      | Enable feature xxx if value is "yes"              |
+---------------+---------------------------------------------------+
| WITHOUT_xxx   | Disable feature xxx if value is "yes"             |
+---------------+---------------------------------------------------+

