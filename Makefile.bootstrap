# Bootstrap Linux System
# 
# Usage: make -f Makefile.bootstrap

# Include configuration if present
ifdef CONFIG
include $(CONFIG)
else
include default.bootstrap.mk
endif

PACKAGES ?=

ACTION ?= building

# Set DESTDIR to temporary dir if not already set
DESTDIR ?= $(PWD)/_build/

TARGETS ?= build install

export DESTDIR

# Internal helper macros
# spkgnam PKGNAME => PKGNAME_SANITIZED
spkgnam = $(subst /,_,$(1))
# sfmtpkg PATTERN PKGNAME => VALUE
sfmtpkg = $(subst %p,$(call spkgnam,$(2)),$(subst %P,$(2),$(1)))

# XXX This should not be part of Makefile.bootstrap
ifeq ($(WITH_FS),YES)
$(PACKAGES): etc/filesystem etc/config etc/pam
etc/config: etc/filesystem
etc/pam: etc/filesystem
override PACKAGES := etc/filesystem etc/config etc/pam $(PACKAGES)
endif

.PHONY: bootstrap clean help fetch list
bootstrap: $(PACKAGES)
	@echo ">> bootstrapping done"

clean: PCTARGETS="distclean"
clean: override ACTION="cleaning"
clean: $(PACKAGES)
	@echo ">> cleaning done"

fetch: PCTARGETS="fetch"
fetch: override ACTION="fetching"
fetch: $(PACKAGES)
	@echo ">> fetching done"

list:
	@echo $(PACKAGES) | tr '[:space:]' '\n' | sort

help:
	@echo "Bootstrap Makefile"
	@echo
	@echo "Variables"
	@echo "========="
	@echo
	@echo "CONFIG    Makefile to evaluate after startup, if omitted, will"
	@echo "          evaluate default.bootstrap.mk"
	@echo "DESTDIR   Root directory of the bootstrapped system, if omitted,"
	@echo "          will be a temporary directory"
	@echo "TARGETS   Targets which shall be executed, by default build and"
	@echo "          install"
	@echo "PACKAGES  Packages which will installed"
	@echo "MAKE_LOG  Pattern for output files for output ofpackage build"
	@echo "          processes, %p will replaced by the package name"
	@echo
	@echo "Current Settings"
	@echo "================"
	@echo "CONFIG    $(CONFIG)"
	@echo "DESTDIR   $(DESTDIR)"
	@echo "TARGETS   $(TARGETS)"
	@echo "MAKE_LOG  $(MAKE_LOG)"
	@echo "          for abc/def/ghj: $(call sfmtpkg,$(MAKE_LOG),abc/def/ghj)"

.PHONY: $(PACKAGES)

# FIXME Rewrite this target
$(PACKAGES): _prebuild
	@echo ">> $(ACTION) $@ ..."
ifdef MAKE_LOG
	@mkdir -p $(dir $(call sfmtpkg,$(MAKE_LOG),$@))
	@touch $(call sfmtpkg,$(MAKE_LOG),$@)
endif
	@-($(MAKE) -C $@ \
		$(if $(PCTARGETS),$(PCTARGETS),$(if $($(call spkgnam,$@)_TARGETS),$($(call spkgnam,$@)_TARGETS),$(TARGETS)))\
		$($(call spkgnam,$@)_FLAGS) \
		$(if $(MAKE_LOG), >> $(call sfmtpkg,$(MAKE_LOG),$@) 2>&1)) \
		&& (echo ">> $(ACTION) $@ succeeded" >&2) || (echo ">> $(ACTION) $@ failed" >&2)

_prebuild: | $(DESTDIR)/$(PREFIX)

$(DESTDIR)/$(PREFIX):
	@mkdir -p $@

